make.file(inputdir=./derivedData/amplicon_reads/processed_reads/, type=gz, prefix=stability)
make.contigs(file=current, processors=16)
summary.seqs(fasta=current)
screen.seqs(fasta=current, group=current, maxambig=0, maxlength=300, maxhomop=8)
unique.seqs(fasta=current)
count.seqs(group=current)
summary.seqs(count=current)
align.seqs(fasta=current, reference=./mothur_files/HOMD_16S_rRNA_RefSeq_V15.1.aligned.fasta, flip=T)
summary.seqs(fasta=current, count=current)
screen.seqs(fasta=current, count=current, start=897, end=1156, maxhomop=8)
filter.seqs(fasta=current, vertical=T, trump=.)
unique.seqs(fasta=current, count=current)
pre.cluster(fasta=current, count=current, diffs=2)
chimera.uchime(fasta=current, count=current, dereplicate=t)
remove.seqs(fasta=current, count=current, accnos=current)
summary.seqs(count=current)
classify.seqs(fasta=current, count=current, reference=./mothur_files/HOMD_16S_rRNA_RefSeq_V15.1.aligned.fasta, taxonomy=./mothur_files/HOMD_16S_rRNA_RefSeq_V15.1.mothur.taxonomy, cutoff=80)
remove.lineage(fasta=current, count=current, taxonomy=current, taxon=unknown;-Archaea;-Eukaryota;)

# rename the working files and move to a new directory
system(cp ./derivedData/amplicon_reads/processed_reads/stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta ./derivedData/mothur_output/final.fasta)
system(cp ./derivedData/amplicon_reads/processed_reads/stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.count_table ./derivedData/mothur_output/final.count_table)

dist.seqs(fasta=./derivedData/mothur_output/final.fasta, cutoff=0.1)
cluster.split(column=current, count=./derivedData/mothur_output/final.count_table, method=average)
make.shared(list=current, count=current, label=0.03)

classify.seqs(fasta=current, count=current, template=./mothur_files/HOMD_16S_rRNA_RefSeq_V15.1.aligned.fasta, taxonomy=./mothur_files/HOMD_16S_rRNA_RefSeq_V15.1.mothur.taxonomy)
classify.otu(list=current, taxonomy=current, count=current, label=0.03, cutoff=80, basis=otu, probs=F)
rarefaction.single(shared=current)
summary.single(shared=current, label=0.03, calc=nseqs-sobs-coverage)